#!/usr/bin/env python3
# -*- python -*-
#
# Copyright 2018 by Chris Osborn <fozztexx@fozztexx.com>
#
# This file is part of viddin.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.

import os
import argparse
import datetime
import tempfile
import sys
import re

parser = argparse.ArgumentParser()
parser.add_argument("file", help="Video file to examine")
parser.add_argument("--fix", action="store_true", help="Fix first chapeter marker to start at exactly 0")
parser.add_argument("--multiplier", type=float, help="Multiplier to shift chapter markers")
parser.add_argument("--chapters", help="File containing list of chapters to replace existing markers")
args = parser.parse_args()

def formatChapter(seconds):
  hours = int(seconds / 3600)
  minutes = int((seconds / 60) % 60)
  return "%02i:%02i:%06.3f" % (hours, minutes, seconds - hours * 3600 - minutes * 60)

def loadChapters(filename):
  chapters = []
  with os.popen("ffmpeg -i \"" + filename + "\" -f ffmetadata 2>&1 | grep 'Chapter #'") as f:
    for line in f:
      fields = line.split()
      begin = float(re.sub(",", "", fields[3]))
      chapters.append(begin)
  return chapters

def decodeTimecode(tc):
  fraction = 0
  if re.match(".*\.[0-9]+$", tc):
    parts = re.split("\.", tc)
    fraction = float("."+parts[1])
    tc = parts[0]

  seconds = sum(int(x) * 60 ** i for i,x in enumerate(reversed(tc.split(":"))))
  seconds += fraction
  return seconds

def loadChapterFile(filename):
  chapters = []
  with open(filename) as f:
    for line in f:
      fields = line.split("\t")
      begin = decodeTimecode(fields[1])
      chapters.append(begin)
  return chapters

video, ext = os.path.splitext(args.file)
if args.chapters:
  chapters = loadChapterFile(args.chapters)
else:
  chapters = loadChapters(args.file)

if args.multiplier:
  for idx in range(len(chapters)):
    chapters[idx] *= args.multiplier

if args.fix:
  chapters.sort()
  if chapters[0] < 2:
    chapters[0] = 0
  else:
    chapters.insert(0, 0)

  cfile, cfname = tempfile.mkstemp()
  for i in range(len(chapters)):
    os.write(cfile, bytes("CHAPTER%02i=%s\n" % (i + 1, formatChapter(chapters[i])), 'UTF-8'))
    os.write(cfile, bytes("CHAPTER%02iNAME=Chapter %i\n" % (i + 1, i + 1), 'UTF-8'))
  os.close(cfile)

  cmd = "mkvpropedit -c %s \"%s\"" % (cfname, args.file.replace("\"", "\\\""))
  os.system(cmd)
  os.remove(cfname)
  
else:
  for i in range(len(chapters)):
    print("Chapter %i\t%s" % (i + 1, formatChapter(chapters[i])))
