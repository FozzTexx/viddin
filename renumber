#!/usr/bin/env python3
import argparse
import os, sys

def build_argparser():
  parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
  parser.add_argument("first", help="number of first episode")
  parser.add_argument("files", nargs="+", help="files to rename", default=".")
  parser.add_argument("--skip", type=int, help="use only every nth file")
  parser.add_argument("--dryrun", action="store_true", help="Don't actually rename files")
  return parser

def main():
  args = build_argparser().parse_args()

  start = args.first.split('x')
  season = int(start[0])
  episode = int(start[1])

  videos = args.files
  videos.sort()

  rename = []
  skip = 1
  if args.skip:
    skip = args.skip
  for idx, old_file in enumerate(videos):
    path = os.path.dirname(old_file)
    base = os.path.basename(old_file)
    if idx % skip != 0:
      continue
    _, ext = os.path.splitext(base)
    new_file = "%ix%02i" % (season, episode + idx / skip) + ext
    new_path = os.path.join(path, new_file)
    rename.append(new_path)

  # FIXME - sort files magically so they don't collide
  for old_path, new_path in zip(videos, rename):
    if not os.path.exists(new_path):
      if not args.dryrun:
        os.rename(old_path, new_path)
      print("Renamed " + old_path + " to " + new_path)
    else:
      print("ALREADY EXISTS", new_path)
  
  return

if __name__ == '__main__':
  exit(main() or 0)
